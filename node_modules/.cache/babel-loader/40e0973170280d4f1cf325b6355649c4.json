{"ast":null,"code":"import _classCallCheck from \"D:\\\\CACF\\\\International Projects\\\\Genuine-Device-Detection-Subsystem-Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\CACF\\\\International Projects\\\\Genuine-Device-Detection-Subsystem-Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\CACF\\\\International Projects\\\\Genuine-Device-Detection-Subsystem-Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\CACF\\\\International Projects\\\\Genuine-Device-Detection-Subsystem-Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\CACF\\\\International Projects\\\\Genuine-Device-Detection-Subsystem-Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\CACF\\\\International Projects\\\\Genuine-Device-Detection-Subsystem-Frontend\\\\src\\\\views\\\\OEMHomePage\\\\InfoSubmission.js\";\n\n/*\r\nCopyright (c) 2018-2019 Qualcomm Technologies, Inc.\r\nAll rights reserved.\r\nRedistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the \r\ndisclaimer below) provided that the following conditions are met:\r\n    * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer \r\n      in the documentation and/or other materials provided with the distribution.\r\n    * Neither the name of Qualcomm Technologies, Inc. nor the names of its contributors may be used to endorse or promote \r\n      products derived from this software without specific prior written permission.\r\n    * The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use \r\n      this software in a product, an acknowledgment is required by displaying the trademark/log as per the details provided \r\n      here: https://www.qualcomm.com/documents/dirbs-logo-and-brand-guidelines\r\n    * Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.\r\n    * This notice may not be removed or altered from any source distribution.\r\nNO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS LICENSE. THIS SOFTWARE IS PROVIDED \r\nBY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT \r\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO \r\nEVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \r\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; \r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN \r\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS \r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\nimport React, { Component } from \"react\";\nimport { I18n } from \"react-i18next\";\nimport { Row, Col, Button, Form, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { withFormik, Field } from \"formik\";\nimport i18n from \"i18next\";\nimport RenderModal from \"../../components/Form/RenderModal\";\nimport renderInput from \"../../components/Form/RenderInput\";\nimport RenderSelect from \"../../components/Form/RenderSelect\";\nimport doubleEntryInput from \"../../components/Form/DoubleEntryInput\";\n\nvar InfoSubmission = /*#__PURE__*/function (_Component) {\n  _inherits(InfoSubmission, _Component);\n\n  function InfoSubmission() {\n    _classCallCheck(this, InfoSubmission);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InfoSubmission).apply(this, arguments));\n  }\n\n  _createClass(InfoSubmission, [{\n    key: \"closeModal\",\n\n    /**\r\n     * Close Modal and Reset fields\r\n     */\n    value: function closeModal() {\n      this.props.closeModal();\n      /**\r\n       * Reset Formik Fields\r\n       */\n\n      this.props.handleReset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          enable = _this$props.enable,\n          selectedIMEI = _this$props.selectedIMEI,\n          values = _this$props.values,\n          touched = _this$props.touched,\n          errors = _this$props.errors,\n          setFieldValue = _this$props.setFieldValue,\n          setFieldTouched = _this$props.setFieldTouched;\n      return /*#__PURE__*/React.createElement(I18n, {\n        ns: \"translations\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, function (t, _ref) {\n        var i18n = _ref.i18n;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(RenderModal, {\n          show: enable,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(ModalHeader, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }\n        }, t(\"addInfoFor\"), \": \", selectedIMEI), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"steps-loading\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          onSubmit: handleSubmit,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(ModalBody, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          name: \"serialNumber\",\n          component: renderInput,\n          type: \"text\",\n          label: t(\"serialNumber\"),\n          placeholder: t(\"serialNumber\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          name: \"color\",\n          component: renderInput,\n          type: \"text\",\n          label: t(\"color\"),\n          placeholder: t(\"color\"),\n          requiredStar: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          name: \"brand\",\n          component: renderInput,\n          type: \"text\",\n          label: t(\"brand\"),\n          placeholder: t(\"brand\"),\n          requiredStar: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          name: \"modelName\",\n          component: renderInput,\n          type: \"text\",\n          label: t(\"modelName\"),\n          placeholder: t(\"modelName\"),\n          requiredStar: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          name: \"mac\",\n          component: doubleEntryInput,\n          label: i18n.t(\"macWiFiAddress\"),\n          type: \"text\",\n          placeholder: i18n.t(\"macWiFiAddress\"),\n          maxLength: 23,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(RenderSelect, {\n          value: values.technologies,\n          onChange: setFieldValue,\n          options: [{\n            label: \"2G\",\n            value: \"2G\"\n          }, {\n            label: \"3G\",\n            value: \"3G\"\n          }, {\n            label: \"4G\",\n            value: \"4G\"\n          }, {\n            label: \"5G\",\n            value: \"5G\"\n          }],\n          onBlur: setFieldTouched,\n          error: errors.technologies,\n          touched: touched.technologies,\n          fieldName: \"technologies\",\n          label: i18n.t(\"radioAccessTechnologies\"),\n          placeholder: i18n.t(\"selectTechnologies\"),\n          requiredStar: true,\n          stayOpen: true,\n          multi: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }\n        })))), /*#__PURE__*/React.createElement(ModalFooter, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          className: \"eq-width\",\n          color: \"secondary\",\n          type: \"button\",\n          onClick: function onClick() {\n            _this.closeModal();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }\n        }, t(\"modal.close\")), /*#__PURE__*/React.createElement(Button, {\n          className: \"eq-width\",\n          color: \"primary\",\n          type: \"submit\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }\n        }, t(\"modal.add\")))))));\n      });\n    }\n  }]);\n\n  return InfoSubmission;\n}(Component);\n/**\r\n * Formik HOC\r\n * @type {React.ComponentType<any>}\r\n */\n\n\nexport var EnhancedModalForm = withFormik({\n  mapPropsToValues: function mapPropsToValues() {\n    return {\n      serialNumber: \"\",\n      color: \"\",\n      brand: \"\",\n      modelName: \"\",\n      mac: \"\",\n      technologies: []\n    };\n  },\n\n  /**\r\n   * Formik validations\r\n   * @param values\r\n   */\n  validate: function validate(values) {\n    console.log(values.selectTechnologies);\n    var errors = {};\n\n    if (!values.technologies || !values.technologies.length) {\n      errors.technologies = i18n.t(\"validation.thisFieldIsRequired\");\n    }\n\n    if (values.serialNumber === \"\") {\n      errors.serialNumber = i18n.t(\"validation.thisFieldIsRequired\");\n    } else if (/\\s/.test(values.serialNumber)) {\n      errors.serialNumber = i18n.t(\"validation.serialNumberMustContainCharactersAndACombinationOf\");\n    }\n\n    if (values.color === \"\") {\n      errors.color = i18n.t(\"validation.thisFieldIsRequired\");\n    } else if (!isNaN(values.color)) {\n      errors.color = i18n.t(\"validation.cannotBeDigitsOnly\");\n    }\n\n    if (values.brand === \"\") {\n      errors.brand = i18n.t(\"validation.thisFieldIsRequired\");\n    } else if (!isNaN(values.brand)) {\n      errors.brand = i18n.t(\"validation.cannotBeDigitsOnly\");\n    }\n\n    if (values.modelName === \"\") {\n      errors.modelName = i18n.t(\"validation.thisFieldIsRequired\");\n    } else if (!isNaN(values.modelName)) {\n      errors.modelName = i18n.t(\"validation.cannotBeDigitsOnly\");\n    }\n\n    return errors;\n  },\n\n  /**\r\n   * Formik submit function\r\n   * @param values\r\n   * @param bag\r\n   */\n  handleSubmit: function handleSubmit(values, bag) {\n    var data = {\n      oem_imei: bag.props.selectedIMEI,\n      oem_serial_no: values.serialNumber,\n      oem_color: values.color,\n      oem_brand: values.brand,\n      oem_model: values.modelName,\n      mac: values.mac,\n      technologies: values.technologies\n    };\n    /**\r\n     * Add single MNO API call\r\n     */\n\n    bag.props.addSingleIMEIInfo(data);\n\n    if (values.serialNumber || values.color || values.brand || values.modelName || values.mac || values.technologies) {\n      values.serialNumber = values.color = values.brand = values.modelName = values.mac = values.technologies = \"\";\n    }\n  },\n  displayName: \"InfoSubmission\" // helps with React DevTools\n\n})(InfoSubmission);","map":{"version":3,"sources":["D:/CACF/International Projects/Genuine-Device-Detection-Subsystem-Frontend/src/views/OEMHomePage/InfoSubmission.js"],"names":["React","Component","I18n","Row","Col","Button","Form","ModalHeader","ModalBody","ModalFooter","withFormik","Field","i18n","RenderModal","renderInput","RenderSelect","doubleEntryInput","InfoSubmission","props","closeModal","handleReset","handleSubmit","enable","selectedIMEI","values","touched","errors","setFieldValue","setFieldTouched","t","technologies","label","value","EnhancedModalForm","mapPropsToValues","serialNumber","color","brand","modelName","mac","validate","console","log","selectTechnologies","length","test","isNaN","bag","data","oem_imei","oem_serial_no","oem_color","oem_brand","oem_model","addSingleIMEIInfo","displayName"],"mappings":"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","sourcesContent":["/*\r\nCopyright (c) 2018-2019 Qualcomm Technologies, Inc.\r\nAll rights reserved.\r\nRedistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the \r\ndisclaimer below) provided that the following conditions are met:\r\n    * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer \r\n      in the documentation and/or other materials provided with the distribution.\r\n    * Neither the name of Qualcomm Technologies, Inc. nor the names of its contributors may be used to endorse or promote \r\n      products derived from this software without specific prior written permission.\r\n    * The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use \r\n      this software in a product, an acknowledgment is required by displaying the trademark/log as per the details provided \r\n      here: https://www.qualcomm.com/documents/dirbs-logo-and-brand-guidelines\r\n    * Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.\r\n    * This notice may not be removed or altered from any source distribution.\r\nNO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS LICENSE. THIS SOFTWARE IS PROVIDED \r\nBY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT \r\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO \r\nEVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \r\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; \r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN \r\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS \r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { I18n } from \"react-i18next\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { withFormik, Field } from \"formik\";\r\nimport i18n from \"i18next\";\r\nimport RenderModal from \"../../components/Form/RenderModal\";\r\nimport renderInput from \"../../components/Form/RenderInput\";\r\nimport RenderSelect from \"../../components/Form/RenderSelect\";\r\nimport doubleEntryInput from \"../../components/Form/DoubleEntryInput\";\r\n\r\nclass InfoSubmission extends Component {\r\n  /**\r\n   * Close Modal and Reset fields\r\n   */\r\n  closeModal() {\r\n    this.props.closeModal();\r\n    /**\r\n     * Reset Formik Fields\r\n     */\r\n    this.props.handleReset();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      handleSubmit,\r\n      enable,\r\n      selectedIMEI,\r\n      values,\r\n      touched,\r\n      errors,\r\n      setFieldValue,\r\n      setFieldTouched,\r\n    } = this.props;\r\n    return (\r\n      <I18n ns=\"translations\">\r\n        {(t, { i18n }) => (\r\n          <div>\r\n            <RenderModal show={enable}>\r\n              <ModalHeader>\r\n                {t(\"addInfoFor\")}: {selectedIMEI}\r\n              </ModalHeader>\r\n              <div className=\"steps-loading\">\r\n                <Form onSubmit={handleSubmit}>\r\n                  <ModalBody>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <Field\r\n                          name=\"serialNumber\"\r\n                          component={renderInput}\r\n                          type=\"text\"\r\n                          label={t(\"serialNumber\")}\r\n                          placeholder={t(\"serialNumber\")}\r\n                        />\r\n                      </Col>\r\n                      <Col md={12}>\r\n                        <Field\r\n                          name=\"color\"\r\n                          component={renderInput}\r\n                          type=\"text\"\r\n                          label={t(\"color\")}\r\n                          placeholder={t(\"color\")}\r\n                          requiredStar\r\n\r\n                        />\r\n                      </Col>\r\n                      <Col md={12}>\r\n                        <Field\r\n                          name=\"brand\"\r\n                          component={renderInput}\r\n                          type=\"text\"\r\n                          label={t(\"brand\")}\r\n                          placeholder={t(\"brand\")}\r\n                          requiredStar\r\n                        />\r\n                      </Col>\r\n                      <Col md={12}>\r\n                        <Field\r\n                          name=\"modelName\"\r\n                          component={renderInput}\r\n                          type=\"text\"\r\n                          label={t(\"modelName\")}\r\n                          placeholder={t(\"modelName\")}\r\n                          requiredStar\r\n                        />\r\n                      </Col>\r\n                      <Col md={12}>\r\n                        <Field\r\n                          name=\"mac\"\r\n                          component={doubleEntryInput}\r\n                          label={i18n.t(\"macWiFiAddress\")}\r\n                          type=\"text\"\r\n                          placeholder={i18n.t(\"macWiFiAddress\")}\r\n                          maxLength={23}\r\n                        />\r\n                      </Col>\r\n                      <Col md={12}>\r\n                        <RenderSelect\r\n                          value={values.technologies}\r\n                          onChange={setFieldValue}\r\n                          options={[\r\n                            { label: \"2G\", value: \"2G\" },\r\n                            { label: \"3G\", value: \"3G\" },\r\n                            {\r\n                              label: \"4G\",\r\n                              value: \"4G\",\r\n                            },\r\n                            { label: \"5G\", value: \"5G\" },\r\n                          ]}\r\n                          onBlur={setFieldTouched}\r\n                          error={errors.technologies}\r\n                          touched={touched.technologies}\r\n                          fieldName=\"technologies\"\r\n                          label={i18n.t(\"radioAccessTechnologies\")}\r\n                          placeholder={i18n.t(\"selectTechnologies\")}\r\n                          requiredStar\r\n                          stayOpen={true}\r\n                          multi={true}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      className=\"eq-width\"\r\n                      color=\"secondary\"\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        this.closeModal();\r\n                      }}\r\n                    >\r\n                      {t(\"modal.close\")}\r\n                    </Button>\r\n                    <Button className=\"eq-width\" color=\"primary\" type=\"submit\">\r\n                      {t(\"modal.add\")}\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Form>\r\n              </div>\r\n            </RenderModal>\r\n          </div>\r\n        )}\r\n      </I18n>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Formik HOC\r\n * @type {React.ComponentType<any>}\r\n */\r\nexport const EnhancedModalForm = withFormik({\r\n  mapPropsToValues: () => ({\r\n    serialNumber: \"\",\r\n    color: \"\",\r\n    brand: \"\",\r\n    modelName: \"\",\r\n    mac: \"\",\r\n    technologies: [],\r\n  }),\r\n  /**\r\n   * Formik validations\r\n   * @param values\r\n   */\r\n  validate: (values) => {\r\n    console.log(values.selectTechnologies);\r\n    let errors = {};\r\n    if (!values.technologies || !values.technologies.length) {\r\n      errors.technologies = i18n.t(\"validation.thisFieldIsRequired\");\r\n    }\r\n    if (values.serialNumber === \"\") {\r\n      errors.serialNumber = i18n.t(\"validation.thisFieldIsRequired\");\r\n    } else if (/\\s/.test(values.serialNumber)) {\r\n      errors.serialNumber = i18n.t(\r\n        \"validation.serialNumberMustContainCharactersAndACombinationOf\"\r\n      );\r\n    }\r\n    if (values.color === \"\") {\r\n      errors.color = i18n.t(\"validation.thisFieldIsRequired\");\r\n    } else if (!isNaN(values.color)) {\r\n      errors.color = i18n.t(\"validation.cannotBeDigitsOnly\");\r\n    }\r\n    if (values.brand === \"\") {\r\n      errors.brand = i18n.t(\"validation.thisFieldIsRequired\");\r\n    } else if (!isNaN(values.brand)) {\r\n      errors.brand = i18n.t(\"validation.cannotBeDigitsOnly\");\r\n    }\r\n    if (values.modelName === \"\") {\r\n      errors.modelName = i18n.t(\"validation.thisFieldIsRequired\");\r\n    } else if (!isNaN(values.modelName)) {\r\n      errors.modelName = i18n.t(\"validation.cannotBeDigitsOnly\");\r\n    }\r\n    return errors;\r\n  },\r\n  /**\r\n   * Formik submit function\r\n   * @param values\r\n   * @param bag\r\n   */\r\n  handleSubmit: (values, bag) => {\r\n    let data = {\r\n      oem_imei: bag.props.selectedIMEI,\r\n      oem_serial_no: values.serialNumber,\r\n      oem_color: values.color,\r\n      oem_brand: values.brand,\r\n      oem_model: values.modelName,\r\n      mac: values.mac,\r\n      technologies: values.technologies,\r\n    };\r\n    /**\r\n     * Add single MNO API call\r\n     */\r\n    bag.props.addSingleIMEIInfo(data);\r\n    if (\r\n      values.serialNumber ||\r\n      values.color ||\r\n      values.brand ||\r\n      values.modelName ||\r\n      values.mac ||\r\n      values.technologies\r\n    ) {\r\n      values.serialNumber = values.color = values.brand = values.modelName = values.mac = values.technologies =\r\n        \"\";\r\n    }\r\n  },\r\n  displayName: \"InfoSubmission\", // helps with React DevTools\r\n})(InfoSubmission);\r\n"]},"metadata":{},"sourceType":"module"}